{"version":3,"sources":["webpack:///./src/pages/about.js"],"names":["AboutPage","render","data","this","props","post","markdownRemark","siteTitle","site","siteMetadata","title","siteUrl","keywords","ogpImage","ogp","childImageSharp","fixed","src","url","fields","slug","location","frontmatter","description","excerpt","meta","property","content","name","join","style","marginTop","rhythm","marginBottom","scale","display","date","tags","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"+OAQMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MAHlC,EAIuBR,EAAKM,KAAKC,aAAhCE,EAJD,EAICA,QAASC,EAJV,EAIUA,SACXC,EAAQ,GAAMF,EAAUT,EAAKY,IAAIC,gBAAgBC,MAAMC,IACvDC,EAAG,GAAMP,EAAUN,EAAKc,OAAOC,KAErC,OACE,kBAAC,IAAD,CAAQC,SAAUlB,KAAKC,MAAMiB,SAAUX,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOL,EAAKiB,YAAYZ,MACxBa,YAAalB,EAAKiB,YAAYC,aAAelB,EAAKmB,QAClDC,KAAM,CACJ,CAAEC,SAAS,SAAWC,QAAST,GAC/B,CAAEQ,SAAS,WAAaC,QAASd,GACjC,CAAEe,KAAK,WAAaD,QAASf,EAASiB,KAAK,SAG/C,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGf5B,EAAKiB,YAAYZ,OAEpB,uBACEoB,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtB3B,EAAKiB,YAAYc,OAGtB,kBAAC,IAAD,CAAMC,KAAMhC,EAAKiB,YAAYe,OAC7B,6BAASC,wBAAyB,CAAEC,OAAQlC,EAAKmC,QACjD,wBACEV,MAAO,CACLG,aAAcD,YAAO,MAGzB,oC,GA/CcS,IAAMC,WAsDf1C,YAER,IAAM2C,EAAS","file":"component---src-pages-about-js-8acd6d5ef360b3c11714.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Tags from \"../components/tags\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass AboutPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata.title\n    const { siteUrl, keywords } = data.site.siteMetadata\n    const ogpImage = `${siteUrl}${data.ogp.childImageSharp.fixed.src}`\n    const url = `${siteUrl}${post.fields.slug}`\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          meta={[\n            { property: `og:url`, content: url },\n            { property: `og:image`, content: ogpImage },\n            { name: `keywords`, content: keywords.join(\",\") },\n          ]}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <Tags tags={post.frontmatter.tags} />\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer />\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default AboutPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        keywords\n      }\n    }\n    ogp: file(absolutePath: { regex: \"/content/assets/ogp.png/\" }) {\n      childImageSharp {\n        fixed(width: 1200, height: 630) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: \"/about\" } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}