{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["TagPageTemplate","data","location","pageContext","url","site","siteMetadata","siteUrl","pathname","siteTitle","title","ogpImage","ogp","childImageSharp","fixed","src","keywords","tagName","slug","posts","allMarkdownRemark","edges","description","meta","property","content","name","join","className","length","map","node","frontmatter","fields","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"+NA8DeA,UAvDS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACnCC,EAAG,GAAMH,EAAKI,KAAKC,aAAaC,QAAUL,EAASM,SACnDC,EAAYR,EAAKI,KAAKC,aAAaI,MACnCC,EAAQ,GAAMV,EAAKI,KAAKC,aAAaC,QAAUN,EAAKW,IAAIC,gBAAgBC,MAAMC,IAC5EC,EAAaf,EAAKI,KAAKC,aAAvBU,SACFC,EAAUd,EAAYe,KACtBC,EAAQlB,EAAKmB,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQnB,SAAUA,EAAUQ,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOO,EACPK,YAAgBL,EAAL,kBACXM,KAAM,CACJ,CAAEC,SAAS,SAAWC,QAASrB,GAC/B,CAAEoB,SAAS,WAAaC,QAASd,GACjC,CAAEe,KAAK,WAAaD,QAAST,EAASW,KAAK,SAG/C,yBAAKC,UAAU,OACb,gCAAMX,GACN,2BACE,2BAAIE,EAAMU,QADZ,cAIDV,EAAMW,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNrB,EAAQqB,EAAKC,YAAYtB,OAASqB,EAAKE,OAAOf,KACpD,OACE,6BAASgB,IAAKH,EAAKE,OAAOf,MACxB,gCACE,wBACEiB,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIR,EAAKE,OAAOf,MACjDR,IAGL,+BAAQqB,EAAKC,YAAYQ,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYV,aAAeS,EAAKY,kBAaxD,IAAMC,EAAS","file":"component---src-templates-tag-page-js-4c962b602a3fd1be224b.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst TagPageTemplate = ({ data, location, pageContext }) => {\n  const url = `${data.site.siteMetadata.siteUrl}${location.pathname}`\n  const siteTitle = data.site.siteMetadata.title\n  const ogpImage = `${data.site.siteMetadata.siteUrl}${data.ogp.childImageSharp.fixed.src}`\n  const { keywords } = data.site.siteMetadata\n  const tagName = pageContext.slug\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={tagName}\n        description={`${tagName}タグを含む記事の一覧ページです`}\n        meta={[\n          { property: `og:url`, content: url },\n          { property: `og:image`, content: ogpImage },\n          { name: `keywords`, content: keywords.join(\",\") },\n        ]}\n      />\n      <div className=\"top\">\n        <h1>#{tagName}</h1>\n        <p>\n          <b>{posts.length}</b>件の投稿があります\n        </p>\n      </div>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n        keywords\n      }\n    }\n    ogp: file(absolutePath: { regex: \"/content/assets/ogp.png/\" }) {\n      childImageSharp {\n        fixed(width: 1200, height: 630) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$slug] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}