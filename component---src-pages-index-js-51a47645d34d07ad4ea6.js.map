{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","siteUrl","keywords","posts","allMarkdownRemark","edges","ogpImage","ogp","childImageSharp","fixed","src","location","meta","property","content","name","join","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","tags","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"+OAQMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MAFlC,EAGuBN,EAAKI,KAAKC,aAAhCE,EAHD,EAGCA,QAASC,EAHV,EAGUA,SACXC,EAAQT,EAAKU,kBAAkBC,MAC/BC,EAAQ,GAAML,EAAUP,EAAKa,IAAIC,gBAAgBC,MAAMC,IAE7D,OACE,kBAAC,IAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUX,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAM,aACNY,KAAM,CACJ,CAAEC,SAAS,SAAWC,QAASb,GAC/B,CAAEY,SAAS,WAAaC,QAASR,GACjC,CAAES,KAAK,WAAaD,QAASZ,EAASc,KAAK,SAG9Cb,EAAMc,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNlB,EAAQkB,EAAKC,YAAYnB,OAASkB,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIT,EAAKE,OAAOC,MACjDrB,IAGL,+BAAQkB,EAAKC,YAAYS,OAE3B,kBAAC,IAAD,CAAMC,KAAMX,EAAKC,YAAYU,OAC7B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,kB,GAtCzCC,IAAMC,WAkDf3C,YAER,IAAM4C,EAAS","file":"component---src-pages-index-js-51a47645d34d07ad4ea6.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Tags from \"../components/tags\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const { siteUrl, keywords } = data.site.siteMetadata\n    const posts = data.allMarkdownRemark.edges\n    const ogpImage = `${siteUrl}${data.ogp.childImageSharp.fixed.src}`\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"saitoxu.io\"\n          meta={[\n            { property: `og:url`, content: siteUrl },\n            { property: `og:image`, content: ogpImage },\n            { name: `keywords`, content: keywords.join(\",\") },\n          ]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <Tags tags={node.frontmatter.tags} />\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        keywords\n      }\n    }\n    ogp: file(absolutePath: { regex: \"/content/assets/ogp.png/\" }) {\n      childImageSharp {\n        fixed(width: 1200, height: 630) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { slug: { ne: \"/about\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}